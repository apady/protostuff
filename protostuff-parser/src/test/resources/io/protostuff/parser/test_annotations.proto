package test_annotations;

/// doc1
@DefaultPerson(name="Anonymous Coward")
message Person {
    required uint32 id = 1;
    
    /// doc2
    @DefaultAge
    optional uint32 age = 2;
    
    optional string name = 3;
    
    optional Gender gender = 4;
    
    /// doc3
    @DefaultGender(value=MALE)
    enum Gender {
        /// doc4
        @Alias(value="m", type=Person)
        MALE = 1;
        /// doc5
        @Alias(value="f", type=Person)
        FEMALE = 2;
    }
    
    /// doc6
    @NestedMessageAnnotation
    message ListRequest {
        required uint32 limit = 1;
        
        /// doc7
        @DeeperMessageAnnotation
        message Response {
            required uint32 count = 1;
            
            /// doc8
            @DeeperMessageFieldAnnotation(nullable=false,version=1.1)
            repeated Person person = 2;
            
            /// doc9
            @TestNested(type=Person, g=Gender)
            optional string key = 3;
        }
    }
    
    extensions 100 to max;
}

/// doc10
@PersonExtras
extend Person {
    /// doc11
    @Validate optional string country = 100;
    
    /// doc12
    @TestExtend(type=Person, g=Person.Gender)
    optional string key = 101;
}

/// doc13
@SomeServiceAnnotation
@AnotherServiceAnnotation
service PersonService {
    
    /// doc14
    @AuthRequired(role=admin)
    rpc Put (Person) returns (Person);
    
    /// doc15
    @TestRpc(type=Person, g=Person.Gender)
    rpc List (Person.ListRequest) returns (Person.ListRequest.Response);
}
